using System;

namespace Bars
{
    class Program
    {
        static void Main(string[] args)
        {
            int healthValue;
            int staminaValue;
            int manaValue;

            string message = "Введите число, на которое изменится количество: ";
            bool isOpen = true;

            while (isOpen)
            {
                Console.WriteLine($"{message} здовровья");
                healthValue = int.Parse(Console.ReadLine());
                Console.WriteLine($"{message} маны");
                manaValue = int.Parse(Console.ReadLine());
                Console.WriteLine($"{message} выносливости");
                staminaValue = int.Parse(Console.ReadLine());

                int yCursorPosition = 6;

                DrawBar(healthValue, ConsoleColor.Red, yCursorPosition++);
                DrawBar(manaValue, ConsoleColor.Blue, yCursorPosition++);
                DrawBar(staminaValue, ConsoleColor.Green, yCursorPosition++);

                Console.ReadKey();
                Console.Clear();
            }
        }

        static void DrawBar(float value, ConsoleColor color, int yPosition)
        {
            ConsoleColor defaultColor = Console.BackgroundColor;

            int minBarValue = 0;
            int maxBarValue = 100;
            
            char filledCellSymbol = '#';
            char emptyCellSymbol = '_';
            char openBracket = '[';
            char closeBracket = ']';

            if (value < minBarValue)
            {
                value = minBarValue;
            }
            else if (value >= maxBarValue)
            {
                value = maxBarValue;
            }

            string bar = string.Empty;

            int barLength = 10;
            int coeffitientDivider = 100;

            float percentToValue = value / coeffitientDivider * barLength;
            int lastFilledCellIndex = (int)Math.Round(percentToValue);
            FillBar(0, lastFilledCellIndex, filledCellSymbol, ref bar);

            Console.SetCursorPosition(0, yPosition);
            Console.Write(openBracket);
            Console.BackgroundColor = color;
            Console.Write(bar);
            Console.BackgroundColor = defaultColor;

            bar = string.Empty;

            FillBar(lastFilledCellIndex, barLength, emptyCellSymbol, ref bar);

            Console.Write(bar + closeBracket);
        }
        
        private static void FillBar(int startIndex, int lastIndex, char symbol, ref string bar)
        {
            for (int i = startIndex; i < lastIndex; i++)
            {
                bar += symbol;
            }
        }
    }
}
