using System;
using System.Collections.Generic;

namespace PlayerDataBase
{
    internal class Program
    {
        static void Main(string[] args)
        {
            DataBase dataBase = new DataBase();

            bool isOpen = true;
            int userInput;

            while (isOpen)
            {
                Console.WriteLine("Для добваления игрока нажмите клавишу: 1" +
                    "\nДля удаления игрока нажмите клавишу: 2" +
                    "\nДля выведения списка всех игроков нажмите клавишу: 3" +
                    "\nДля внесения игрока в бан лист нажмите клавишу: 4" +
                    "\nДля удаления игрока из бан листа нажмите клавишу: 5" +
                    "\nДля выведения бан листа нажмите клавишу: 6");

                switch (userInput = Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:
                        dataBase.AddPlayer();
                        break;
                    case 2:
                        dataBase.RemovePlayer();
                        break;
                    case 3:
                        dataBase.ShowAllPlayers();
                        break;
                    case 4:
                        dataBase.BanPlayer();
                        break;
                    case 5:
                        dataBase.UnbanPlayer();
                        break;
                    case 6:
                        dataBase.ShowAllBannedPlayers();
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class DataBase
    {
        List<Player> players = new List<Player>();
        List<Player> bannedPlayers = new List<Player>();

        public void AddPlayer()
        {
            Console.WriteLine($"Введите номер, под которым хотите добавить нового игрока: ");
            int playerID = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine($"Введите имя игрока: ");
            string playerName = Console.ReadLine();
            Console.WriteLine($"Введите уровень игрока: ");
            int playerLevel = Convert.ToInt32(Console.ReadLine());

            Player player = new Player(playerID, playerName, playerLevel);
            players.Add(player);
        }

        public void RemovePlayer()
        {
            for (int i = 0; i < players.Count; i++)
            {
                players.RemoveAt(i);
            }
        }

        public void ShowAllPlayers()
        {
            foreach (var player in players)
            {
                player.ShowInfo();
            }
        }

        public void ShowAllBannedPlayers()
        {
            foreach (var player in bannedPlayers)
            {
                player.ShowInfo();
            }
        }

        public void BanPlayer()
        {
            Console.WriteLine($"Введите номер игрока, которого необходимо забанить: ");
            int banPlayerID = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < players.Count; i++)
            {
                if (banPlayerID == players[i].PlayerID)
                {
                    bannedPlayers.Add(players[i]);
                    players.RemoveAt(i);
                }
                else
                {
                    Console.WriteLine("Игрок с указанным номером не найден.");
                    break;
                }
            }
        }
        public void UnbanPlayer()
        {
            Console.WriteLine($"Введите номер игрока, которого необходимо разбанить: ");
            int unbanPlayerID = Convert.ToInt32(Console.ReadLine());

            for (int i = 0; i < bannedPlayers.Count; i++)
            {
                if (unbanPlayerID == bannedPlayers[i].PlayerID)
                {
                    players.Add(bannedPlayers[i]);
                    bannedPlayers.RemoveAt(i);
                }
                else
                {
                    Console.WriteLine("Игрок с указанным номером не найден.");
                    break;
                }
            }
        }

        class Player
        {
            public int PlayerID { get; private set; }
            public string PlayerName { get; private set; }
            public int PlayerLevel { get; private set; }

            public Player(int playerID, string playerName, int playerLevel)
            {
                PlayerID = playerID;
                PlayerName = playerName;
                PlayerLevel = playerLevel;
            }
            public void ShowInfo()
            {
                Console.WriteLine($"Номер игрока: {PlayerID}\nИмя игрока: {PlayerName}\nУровень игрока: {PlayerLevel}");
            }
        }
    }
}
