using System;
using System.Collections.Generic;

namespace Player_Database
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddPlayer = "1";
            const string CommandRemovePlayer = "2";
            const string CommandShowInfo = "3";
            const string CommandBanPlayer = "4";
            const string CommandUnbanPlayer = "5";

            bool isOpen = true;
            Database database = new Database();

            while (isOpen)
            {
                Console.WriteLine($"\nДля добавления игрока введите: {CommandAddPlayer}." +
                    $"\nДля удаления игрока введите: {CommandRemovePlayer}." +
                    $"\nДля выведения списка игроков введите: {CommandShowInfo}." +
                    $"\nДля внесения игрока в бан листы введите: {CommandBanPlayer}." +
                    $"\nДля вынесения игрока из бан листа введите: {CommandUnbanPlayer}.");

                string keyInput = Console.ReadLine();

                switch (keyInput)
                {
                    case CommandAddPlayer:
                        database.AddPlayer();
                        break;
                    case CommandRemovePlayer:
                        database.RemovePlayer();
                        break;
                    case CommandShowInfo:
                        database.ShowInfo();
                        break;
                    case CommandBanPlayer:
                        database.BanPlayer();
                        break;
                    case CommandUnbanPlayer:
                        database.UnbanPlayer();
                        break;
                }
            }
        }
    }
    class Database
    {
        private List<Player> _players = new List<Player>();

        public void AddPlayer()
        {
            Console.WriteLine($"Введите имя игрока: ");
            string playerName = Console.ReadLine();

            Console.WriteLine($"Введите уровень игрока: ");
            int playerLevel;

            while (int.TryParse(Console.ReadLine(), out playerLevel) == false)
                Console.WriteLine("Введите число:");

            _players.Add(new Player(playerName, playerLevel, false));
        }

        public void RemovePlayer()
        {
            if (TryGetPlayer(out Player foundPlayer, "удалить"))
            {
                _players.Remove(foundPlayer);
            }
        }

        public void BanPlayer()
        {
            if (TryGetPlayer(out Player foundPlayer, "забанить"))
            {
                foundPlayer.Ban();
            }
        }

        public void UnbanPlayer()
        {
            if (TryGetPlayer(out Player foundPlayer, "разабанить"))
            {
                foundPlayer.Unban();
            }
        }

        public void ShowInfo()
        {
            foreach (var player in _players)
            {
                player.ShowInfo();
            }
        }

        private bool TryGetPlayer(out Player foundPlayer, string action)
        {
            foundPlayer = null;

            Console.WriteLine($"Введите номер игрока, которого хотите {action}.");
            int.TryParse(Console.ReadLine(), out int playerId);

            foreach (Player player in _players)
            {
                if (playerId == player.Id)
                {
                    foundPlayer = player;
                    return true;
                }
            }

            Console.WriteLine("Игрок под этим номером не найден.");
            Console.ReadKey();
            return false;
        }

        class Player
        {
            private static int _id = 1;
            public Player(string name, int level, bool isBanned)
            {
                Id = _id++;
                Name = name;
                Level = level;
                IsBanned = isBanned;
            }

            public int Id { get; private set; }
            public string Name { get; private set; }
            public int Level { get; private set; }
            public bool IsBanned { get; private set; }

            public void ShowInfo()
            {
                Console.WriteLine($"Номер игрока: {Id}." +
                    $"\nИмя игрока: {Name}." +
                    $"\nУровень игрока: {Level}." +
                    $"\nСтатус блокировки игрока: {IsBanned}.");
            }

            public void Ban()
            {
                IsBanned = true;
            }

            public void Unban()
            {
                IsBanned = false;
            }
        }
    }
}
